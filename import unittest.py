import unittest
from Lab8 import Node, Polynomial

class TestPolynomial(unittest.TestCase):
    
    def test_insert(self):
        p = Polynomial()
        p.insert(2, 4)
        p.insert(5, 2)
        p.insert(7, 3)
        p.insert(-8, 4)
        p.insert(10, 0)
        p.insert(-3, 3)
        self.assertEqual(p.head.coeff, 2)
        self.assertEqual(p.head.exp, 4)
        self.assertEqual(p.head.next.coeff, 5)
        self.assertEqual(p.head.next.exp, 2)
        self.assertEqual(p.head.next.next.coeff, 7)
        self.assertEqual(p.head.next.next.exp, 3)
        self.assertEqual(p.head.next.next.next.coeff, -8)
        self.assertEqual(p.head.next.next.next.exp, 4)
        self.assertEqual(p.head.next.next.next.next.coeff, 10)
        self.assertEqual(p.head.next.next.next.next.exp, 0)
        self.assertEqual(p.head.next.next.next.next.next.coeff, -3)
        self.assertEqual(p.head.next.next.next.next.next.exp, 3)
        
    def test_simplify(self):
        p = Polynomial()
        p.insert(2, 4)
        p.insert(5, 2)
        p.insert(7, 3)
        p.insert(-8, 4)
        p.insert(10, 0)
        p.insert(-3, 3)
        p.simplify()
        self.assertEqual(p.head.coeff, -6)
        self.assertEqual(p.head.exp, 4)
        self.assertEqual(p.head.next.coeff, 5)
        self.assertEqual(p.head.next.exp, 2)
        self.assertEqual(p.head.next.next.coeff, 4)
        self.assertEqual(p.head.next.next.exp, 3)
        self.assertEqual(p.head.next.next.next.coeff, 10)
        self.assertEqual(p.head.next.next.next.exp, 0)
        
    def test_sort(self):
        p = Polynomial()
        p.insert(2, 4)
        p.insert(5, 2)
        p.insert(7, 3)
        p.insert(-8, 4)
        p.insert(10, 0)
        p.insert(-3, 3)
        p.simplify()
        p.sort()
        self.assertEqual(p.head.coeff, -6)
        self.assertEqual(p.head.exp, 4)
        self.assertEqual(p.head.next.coeff, 4)
        self.assertEqual(p.head.next.exp, 3)
        self.assertEqual(p.head.next.next.coeff, 5)
        self.assertEqual(p.head.next.next.exp, 2)
        self.assertEqual(p.head.next.next.next.coeff, 10)
        self.assertEqual(p.head.next.next.next.exp, 0)
if __name__ == '__main__':
    unittest.main()
